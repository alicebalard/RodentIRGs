## Update all positions: chr, breaks, genes
geneDF$chrLeft <- 1000 # + 1000 on the left
geneDF$chrRight[geneDF$broken %in% "no"] <- geneDF$chrRight[geneDF$broken %in% "no"] + 1000
geneDF$chrRight[geneDF$broken %in% "yes"] <- geneDF$chrRight[geneDF$broken %in% "yes"] - geneDF$breaksize[geneDF$broken %in% "yes"]
# update: break
geneDF$breakstart <- NA
geneDF$breakstart[geneDF$broken %in% "yes"] <- geneDF$stopPart1[geneDF$broken %in% "yes"]
geneDF$breakend[geneDF$broken %in% "yes"] <- geneDF$startPart2[geneDF$broken %in% "yes"] -
geneDF$breaksize[geneDF$broken %in% "yes"]
# update position: genes
geneDF$geneLeft <- geneDF$geneLeft + 1000
geneDF$geneRight<- geneDF$geneRight + 1000
geneDF$geneLeft[geneDF$whichpart %in% "part2"] <- geneDF$geneLeft[geneDF$whichpart %in% "part2"] -
geneDF$breaksize[geneDF$whichpart %in% "part2"]
geneDF$geneRight[geneDF$whichpart %in% "part2"] <- geneDF$geneRight[geneDF$whichpart %in% "part2"] -
geneDF$breaksize[geneDF$whichpart %in% "part2"]
## Simplify names for legend
geneDF$IRGgroup <- geneDF$Name_Bekpen_2005
geneDF$IRGgroup[geneDF$Name_Bekpen_2005 %in% c("Irgb9b8", "Irgb1b2", "Irgb5" , "Irgb5*b3")] <- "Irgb tandems"
geneDF$IRGgroup[geneDF$Name_Bekpen_2005 %in% c("Irga2", "Irga4", "Irga3", "Irga6")] <- "Irga"
geneDF$IRGgroup[geneDF$Name_Bekpen_2005 %in% c("Irgb6*", "Irgb6") ] <- "Irgb6"
# order species according to phylogeny:
geneDF$sp <- factor(geneDF$sp, levels = c("Itri", "Anil", "Mcou", "Rrat", "Rnor",
"Mpah", "Mmus", "Mcar", "Aamp", "Moch",
"Otor", "Pman", "Pleu", "Cgri"))
# colors for plot:
mycolors <- c("darkgray","red",6,"violet","darkblue","blue2","green1","green2","green3","blue4")
# to add a scale instead of x axis
scaleDF = data.frame(sp=geneDF$sp, x=300000, xend=310000, chr="NW_020822456.1", chr2="NW_020822466.1")
scaleDF <- scaleDF[scaleDF$sp %in% "Cgri",] # to keep the levels for factor
scaleDF$label <- NA
scaleDF$label[1] = "10kb"
## and plot
syntenyPlot <- ggplot(geneDF) +
# chr
geom_segment(aes(x=chrLeft, xend = chrRight, y=chr, yend=chr), col = "grey", size = 1) +
# break in long chr
geom_segment(aes(x=breakstart+1000, xend=breakend, y=chr, yend=chr), col = "black", size = 7) +
# genes
geom_segment(aes(x=geneLeft, xend=geneRight, y=chr, yend=chr, col = Name_Bekpen_2005), size = 3) +
geom_text(aes(x=(geneRight-geneLeft)/2, y=chr, label=Name_Bekpen_2005), size = 4) +
theme_bw() +
# add scale
geom_errorbarh(data=scaleDF,
aes(xmin=x,y=chr,xmax=xend), size = 1) +
geom_text(data=scaleDF, aes(y=chr2, label=label), x=305000) +
#facet_grid(sp~., scales = "free_y") +
facet_wrap(sp~., scales = "free_y", nrow = 14) +
# scale_color_manual(values = mycolors) +
scale_x_continuous(expand=c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x  = element_blank(), axis.ticks.x  = element_blank(), axis.title.x  = element_blank(),
axis.title.y  = element_blank(),
panel.border=element_blank())
syntenyPlot
### SAVING POINT:
pdf(file = "../figures/SyntenyPlot.pdf", width = 13, height = 15)
syntenyPlot
dev.off()
## and plot
syntenyPlot <- ggplot(geneDF) +
# chr
geom_segment(aes(x=chrLeft, xend = chrRight, y=chr, yend=chr), col = "grey", size = 1) +
# break in long chr
geom_segment(aes(x=breakstart+1000, xend=breakend, y=chr, yend=chr), col = "black", size = 7) +
# genes
geom_segment(aes(x=geneLeft, xend=geneRight, y=chr, yend=chr, col = Name_Bekpen_2005), size = 3) +
geom_text(aes(x=geneLeft+(geneRight-geneLeft)/2, y=chr, label=Name_Bekpen_2005), size = 4) +
theme_bw() +
# add scale
geom_errorbarh(data=scaleDF,
aes(xmin=x,y=chr,xmax=xend), size = 1) +
geom_text(data=scaleDF, aes(y=chr2, label=label), x=305000) +
#facet_grid(sp~., scales = "free_y") +
facet_wrap(sp~., scales = "free_y", nrow = 14) +
# scale_color_manual(values = mycolors) +
scale_x_continuous(expand=c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x  = element_blank(), axis.ticks.x  = element_blank(), axis.title.x  = element_blank(),
axis.title.y  = element_blank(),
panel.border=element_blank())
syntenyPlot
### SAVING POINT:
pdf(file = "../figures/SyntenyPlot.pdf", width = 13, height = 15)
syntenyPlot
dev.off()
## and plot
syntenyPlot <- ggplot(geneDF) +
# chr
geom_segment(aes(x=chrLeft, xend = chrRight, y=chr, yend=chr), col = "grey", size = 1) +
# break in long chr
geom_segment(aes(x=breakstart+1000, xend=breakend, y=chr, yend=chr), col = "black", size = 7) +
# genes
geom_segment(aes(x=geneLeft, xend=geneRight, y=chr, yend=chr, col = Name_Bekpen_2005), size = 3) +
geom_text(aes(x=geneLeft+(geneRight-geneLeft)/2, y=chr, label=Name_Bekpen_2005), size = 3) +
theme_bw() +
# add scale
geom_errorbarh(data=scaleDF,
aes(xmin=x,y=chr,xmax=xend), size = 1) +
geom_text(data=scaleDF, aes(y=chr2, label=label), x=305000) +
#facet_grid(sp~., scales = "free_y") +
facet_wrap(sp~., scales = "free_y", nrow = 14) +
# scale_color_manual(values = mycolors) +
scale_x_continuous(expand=c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x  = element_blank(), axis.ticks.x  = element_blank(), axis.title.x  = element_blank(),
axis.title.y  = element_blank(),
panel.border=element_blank())
syntenyPlot
### SAVING POINT:
pdf(file = "../figures/SyntenyPlot.pdf", width = 13, height = 15)
syntenyPlot
dev.off()
## and plot
syntenyPlot <- ggplot(geneDF) +
# chr
geom_segment(aes(x=chrLeft, xend = chrRight, y=chr, yend=chr), col = "grey", size = 1) +
# break in long chr
geom_segment(aes(x=breakstart+1000, xend=breakend, y=chr, yend=chr), col = "black", size = 7) +
# genes
geom_segment(aes(x=geneLeft, xend=geneRight, y=chr, yend=chr, col = Name_Bekpen_2005), size = 3) +
geom_text(aes(x=geneLeft+(geneRight-geneLeft)/2, y=chr, label=Name_Bekpen_2005), size = 2) +
theme_bw() +
# add scale
geom_errorbarh(data=scaleDF,
aes(xmin=x,y=chr,xmax=xend), size = 1) +
geom_text(data=scaleDF, aes(y=chr2, label=label), x=305000) +
#facet_grid(sp~., scales = "free_y") +
facet_wrap(sp~., scales = "free_y", nrow = 14) +
# scale_color_manual(values = mycolors) +
scale_x_continuous(expand=c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x  = element_blank(), axis.ticks.x  = element_blank(), axis.title.x  = element_blank(),
axis.title.y  = element_blank(),
panel.border=element_blank())
syntenyPlot
### SAVING POINT:
pdf(file = "../figures/SyntenyPlot.pdf", width = 13, height = 15)
syntenyPlot
dev.off()
# for gene label
geom_text(aes(x=geneLeft+(geneRight-geneLeft)/2, y=chr, label=Name_Bekpen_2005), size = 2) +
geneDF$Name_Bekpen_2005
# for gene label
geneDF$Name_Bekpen_2005
# for gene label
gsub("Irg", "", geneDF$Name_Bekpen_2005)
# for gene label
geneDF$shortName <- gsub("Irg", "", geneDF$Name_Bekpen_2005)
## and plot
syntenyPlot <- ggplot(geneDF) +
# chr
geom_segment(aes(x=chrLeft, xend = chrRight, y=chr, yend=chr), col = "grey", size = 1) +
# break in long chr
geom_segment(aes(x=breakstart+1000, xend=breakend, y=chr, yend=chr), col = "black", size = 7) +
# genes
geom_segment(aes(x=geneLeft, xend=geneRight, y=chr, yend=chr, col = Name_Bekpen_2005), size = 3) +
geom_text(aes(x=geneLeft+(geneRight-geneLeft)/2, y=chr, label=shortName), size = 2) +
theme_bw() +
# add scale
geom_errorbarh(data=scaleDF,
aes(xmin=x,y=chr,xmax=xend), size = 1) +
geom_text(data=scaleDF, aes(y=chr2, label=label), x=305000) +
#facet_grid(sp~., scales = "free_y") +
facet_wrap(sp~., scales = "free_y", nrow = 14) +
# scale_color_manual(values = mycolors) +
scale_x_continuous(expand=c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x  = element_blank(), axis.ticks.x  = element_blank(), axis.title.x  = element_blank(),
axis.title.y  = element_blank(),
panel.border=element_blank())
syntenyPlot
### SAVING POINT:
pdf(file = "../figures/SyntenyPlot.pdf", width = 13, height = 15)
syntenyPlot
dev.off()
## and plot
syntenyPlot <- ggplot(geneDF) +
# chr
geom_segment(aes(x=chrLeft, xend = chrRight, y=chr, yend=chr), col = "grey", size = 1) +
# break in long chr
geom_segment(aes(x=breakstart+1000, xend=breakend, y=chr, yend=chr), col = "black", size = 7) +
# genes
geom_segment(aes(x=geneLeft, xend=geneRight, y=chr, yend=chr, col = Name_Bekpen_2005), size = 3) +
geom_text(aes(x=geneLeft+(geneRight-geneLeft)/2, y=chr, label=shortName), size = 2) +
theme_bw() +
# add scale
geom_errorbarh(data=scaleDF,
aes(xmin=x,y=chr,xmax=xend), size = 1) +
geom_label(data=scaleDF, aes(y=chr2, label=label), x=305000) +
#facet_grid(sp~., scales = "free_y") +
facet_wrap(sp~., scales = "free_y", nrow = 14) +
# scale_color_manual(values = mycolors) +
scale_x_continuous(expand=c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x  = element_blank(), axis.ticks.x  = element_blank(), axis.title.x  = element_blank(),
axis.title.y  = element_blank(),
panel.border=element_blank())
## and plot
syntenyPlot <- ggplot(geneDF) +
# chr
geom_segment(aes(x=chrLeft, xend = chrRight, y=chr, yend=chr), col = "grey", size = 1) +
# break in long chr
geom_segment(aes(x=breakstart+1000, xend=breakend, y=chr, yend=chr), col = "black", size = 7) +
# genes
geom_segment(aes(x=geneLeft, xend=geneRight, y=chr, yend=chr, col = Name_Bekpen_2005), size = 3) +
geom_label(aes(x=geneLeft+(geneRight-geneLeft)/2, y=chr, label=shortName), size = 2) +
theme_bw() +
# add scale
geom_errorbarh(data=scaleDF,
aes(xmin=x,y=chr,xmax=xend), size = 1) +
geom_text(data=scaleDF, aes(y=chr2, label=label), x=305000) +
#facet_grid(sp~., scales = "free_y") +
facet_wrap(sp~., scales = "free_y", nrow = 14) +
# scale_color_manual(values = mycolors) +
scale_x_continuous(expand=c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x  = element_blank(), axis.ticks.x  = element_blank(), axis.title.x  = element_blank(),
axis.title.y  = element_blank(),
panel.border=element_blank())
syntenyPlot
### SAVING POINT:
pdf(file = "../figures/SyntenyPlot.pdf", width = 13, height = 15)
syntenyPlot
dev.off()
## and plot
syntenyPlot <- ggplot(geneDF) +
# chr
geom_segment(aes(x=chrLeft, xend = chrRight, y=chr, yend=chr), col = "grey", size = 1) +
# break in long chr
geom_segment(aes(x=breakstart+1000, xend=breakend, y=chr, yend=chr), col = "black", size = 7) +
# genes
geom_segment(aes(x=geneLeft, xend=geneRight, y=chr, yend=chr, col = Name_Bekpen_2005), size = 3) +
geom_text(aes(x=geneLeft+(geneRight-geneLeft)/2, y=chr, label=shortName), size = 2) +
theme_bw() +
# add scale
geom_errorbarh(data=scaleDF,
aes(xmin=x,y=chr,xmax=xend), size = 1) +
geom_text(data=scaleDF, aes(y=chr2, label=label), x=305000) +
#facet_grid(sp~., scales = "free_y") +
facet_wrap(sp~., scales = "free_y", nrow = 14) +
# scale_color_manual(values = mycolors) +
scale_x_continuous(expand=c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x  = element_blank(), axis.ticks.x  = element_blank(), axis.title.x  = element_blank(),
axis.title.y  = element_blank(),
panel.border=element_blank())
syntenyPlot
### SAVING POINT:
pdf(file = "../figures/SyntenyPlot.pdf", width = 13, height = 15)
syntenyPlot
dev.off()
## and plot
syntenyPlot <- ggplot(geneDF) +
# chr
geom_segment(aes(x=chrLeft, xend = chrRight, y=chr, yend=chr), col = "grey", size = 1) +
# break in long chr
geom_segment(aes(x=breakstart+1000, xend=breakend, y=chr, yend=chr), col = "black", size = 7) +
# genes
geom_segment(aes(x=geneLeft, xend=geneRight, y=chr, yend=chr, col = IRGgroup), size = 3) +
geom_text(aes(x=geneLeft+(geneRight-geneLeft)/2, y=chr, label=shortName), size = 2) +
theme_bw() +
# add scale
geom_errorbarh(data=scaleDF,
aes(xmin=x,y=chr,xmax=xend), size = 1) +
geom_text(data=scaleDF, aes(y=chr2, label=label), x=305000) +
#facet_grid(sp~., scales = "free_y") +
facet_wrap(sp~., scales = "free_y", nrow = 14) +
# scale_color_manual(values = mycolors) +
scale_x_continuous(expand=c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x  = element_blank(), axis.ticks.x  = element_blank(), axis.title.x  = element_blank(),
axis.title.y  = element_blank(),
panel.border=element_blank())
syntenyPlot
### SAVING POINT:
pdf(file = "../figures/SyntenyPlot.pdf", width = 13, height = 15)
syntenyPlot
dev.off()
geneDF$IRGgroup[geneDF$Name_Bekpen_2005 %in% c("Irgm1", "Irgm2", "Irgm3") ] <- "Irgm"
# order species according to phylogeny:
geneDF$sp <- factor(geneDF$sp, levels = c("Itri", "Anil", "Mcou", "Rrat", "Rnor",
"Mpah", "Mmus", "Mcar", "Aamp", "Moch",
"Otor", "Pman", "Pleu", "Cgri"))
# colors for plot:
mycolors <- c("darkgray","red",6,"violet","darkblue","blue2","green1","green2","green3","blue4")
# to add a scale instead of x axis
scaleDF = data.frame(sp=geneDF$sp, x=300000, xend=310000, chr="NW_020822456.1", chr2="NW_020822466.1")
scaleDF <- scaleDF[scaleDF$sp %in% "Cgri",] # to keep the levels for factor
scaleDF$label <- NA
scaleDF$label[1] = "10kb"
# for gene label
geneDF$shortName <- gsub("Irg", "", geneDF$Name_Bekpen_2005)
## and plot
syntenyPlot <- ggplot(geneDF) +
# chr
geom_segment(aes(x=chrLeft, xend = chrRight, y=chr, yend=chr), col = "grey", size = 1) +
# break in long chr
geom_segment(aes(x=breakstart+1000, xend=breakend, y=chr, yend=chr), col = "black", size = 7) +
# genes
geom_segment(aes(x=geneLeft, xend=geneRight, y=chr, yend=chr, col = IRGgroup), size = 3) +
geom_text(aes(x=geneLeft+(geneRight-geneLeft)/2, y=chr, label=shortName), size = 2) +
theme_bw() +
# add scale
geom_errorbarh(data=scaleDF,
aes(xmin=x,y=chr,xmax=xend), size = 1) +
geom_text(data=scaleDF, aes(y=chr2, label=label), x=305000) +
facet_wrap(sp~., scales = "free_y", nrow = 14) +
scale_color_manual(values = mycolors) +
scale_x_continuous(expand=c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x  = element_blank(), axis.ticks.x  = element_blank(), axis.title.x  = element_blank(),
axis.title.y  = element_blank(),
panel.border=element_blank())
syntenyPlot
### SAVING POINT:
pdf(file = "../figures/SyntenyPlot.pdf", width = 13, height = 15)
syntenyPlot
dev.off()
# colors for plot:
mycolors <- c("darkgray","red",6,"violet","darkblue","lightblue","green1","brown")
## and plot
syntenyPlot <- ggplot(geneDF) +
# chr
geom_segment(aes(x=chrLeft, xend = chrRight, y=chr, yend=chr), col = "grey", size = 1) +
# break in long chr
geom_segment(aes(x=breakstart+1000, xend=breakend, y=chr, yend=chr), col = "black", size = 7) +
# genes
geom_segment(aes(x=geneLeft, xend=geneRight, y=chr, yend=chr, col = IRGgroup), size = 3) +
geom_text(aes(x=geneLeft+(geneRight-geneLeft)/2, y=chr, label=shortName), size = 2) +
theme_bw() +
# add scale
geom_errorbarh(data=scaleDF,
aes(xmin=x,y=chr,xmax=xend), size = 1) +
geom_text(data=scaleDF, aes(y=chr2, label=label), x=305000) +
facet_wrap(sp~., scales = "free_y", nrow = 14) +
scale_color_manual(values = mycolors) +
scale_x_continuous(expand=c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x  = element_blank(), axis.ticks.x  = element_blank(), axis.title.x  = element_blank(),
axis.title.y  = element_blank(),
panel.border=element_blank())
syntenyPlot
### SAVING POINT:
pdf(file = "../figures/SyntenyPlot.pdf", width = 13, height = 15)
syntenyPlot
dev.off()
# colors for plot:
mycolors <- c("yellow","red",6,"violet","darkblue","lightblue","green1","brown")
## and plot
syntenyPlot <- ggplot(geneDF) +
# chr
geom_segment(aes(x=chrLeft, xend = chrRight, y=chr, yend=chr), col = "grey", size = 1) +
# break in long chr
geom_segment(aes(x=breakstart+1000, xend=breakend, y=chr, yend=chr), col = "black", size = 7) +
# genes
geom_segment(aes(x=geneLeft, xend=geneRight, y=chr, yend=chr, col = IRGgroup), size = 3) +
geom_text(aes(x=geneLeft+(geneRight-geneLeft)/2, y=chr, label=shortName), size = 2) +
theme_bw() +
# add scale
geom_errorbarh(data=scaleDF,
aes(xmin=x,y=chr,xmax=xend), size = 1) +
geom_text(data=scaleDF, aes(y=chr2, label=label), x=305000) +
facet_wrap(sp~., scales = "free_y", nrow = 14) +
scale_color_manual(values = mycolors) +
scale_x_continuous(expand=c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x  = element_blank(), axis.ticks.x  = element_blank(), axis.title.x  = element_blank(),
axis.title.y  = element_blank(),
panel.border=element_blank())
syntenyPlot
### SAVING POINT:
pdf(file = "../figures/SyntenyPlot.pdf", width = 13, height = 15)
syntenyPlot
dev.off()
# gene direction
geneDF$geneLeft
# gene direction
geneDF$start
# gene direction
geneDF$start > geneDF$stop
# gene direction
geneDF$direction <- "forward"
geneDF$direction[geneDF$start > geneDF$stop] <- "reverse"
## and plot
syntenyPlot <- ggplot(geneDF) +
# chr
geom_segment(aes(x=chrLeft, xend = chrRight, y=chr, yend=chr), col = "grey", size = 1) +
# break in long chr
geom_segment(aes(x=breakstart+1000, xend=breakend, y=chr, yend=chr), col = "black", size = 7) +
# genes
geom_segment(aes(x=geneLeft, xend=geneRight, y=chr, yend=chr, col = IRGgroup), size = 3) +
# genes labels
geom_text(aes(x=geneLeft+(geneRight-geneLeft)/2, y=chr, label=shortName), size = 2) +
# arrows for directions
geom_segment(data=geneDF[geneDF$direction %in% "forward",],
aes(x = geneLeft, y = chr, xend = geneRight, yend = chr),
arrow = arrow(length = unit(0.5, "cm")))
## and plot
syntenyPlot <- ggplot(geneDF) +
# chr
geom_segment(aes(x=chrLeft, xend = chrRight, y=chr, yend=chr), col = "grey", size = 1) +
# break in long chr
geom_segment(aes(x=breakstart+1000, xend=breakend, y=chr, yend=chr), col = "black", size = 7) +
# genes
geom_segment(aes(x=geneLeft, xend=geneRight, y=chr, yend=chr, col = IRGgroup), size = 3) +
# genes labels
geom_text(aes(x=geneLeft+(geneRight-geneLeft)/2, y=chr, label=shortName), size = 2) +
# arrows for directions
geom_segment(data=geneDF[geneDF$direction %in% "forward",],
aes(x = geneLeft, y = chr, xend = geneRight, yend = chr),
arrow = arrow(length = unit(0.5, "cm"))) +
theme_bw() +
# add scale
geom_errorbarh(data=scaleDF,
aes(xmin=x,y=chr,xmax=xend), size = 1) +
geom_text(data=scaleDF, aes(y=chr2, label=label), x=305000) +
facet_wrap(sp~., scales = "free_y", nrow = 14) +
scale_color_manual(values = mycolors) +
scale_x_continuous(expand=c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x  = element_blank(), axis.ticks.x  = element_blank(), axis.title.x  = element_blank(),
axis.title.y  = element_blank(),
panel.border=element_blank())
syntenyPlot
### SAVING POINT:
pdf(file = "../figures/SyntenyPlot.pdf", width = 13, height = 15)
syntenyPlot
dev.off()
## and plot
syntenyPlot <- ggplot(geneDF) +
# chr
geom_segment(aes(x=chrLeft, xend = chrRight, y=chr, yend=chr), col = "grey", size = 1) +
# break in long chr
geom_segment(aes(x=breakstart+1000, xend=breakend, y=chr, yend=chr), col = "black", size = 7) +
# GENES:
# arrows for directions
geom_segment(data=geneDF[geneDF$direction %in% "forward",],
aes(x = geneLeft, y = chr, xend = geneRight, yend = chr),
arrow = arrow(length = unit(0.3, "cm"))) +
# blocks for position
geom_segment(aes(x=geneLeft, xend=geneRight, y=chr, yend=chr, col = IRGgroup), size = 3) +
# genes labels
geom_text(aes(x=geneLeft+(geneRight-geneLeft)/2, y=chr, label=shortName), size = 2) +
theme_bw() +
# add scale
geom_errorbarh(data=scaleDF,
aes(xmin=x,y=chr,xmax=xend), size = 1) +
geom_text(data=scaleDF, aes(y=chr2, label=label), x=305000) +
facet_wrap(sp~., scales = "free_y", nrow = 14) +
scale_color_manual(values = mycolors) +
scale_x_continuous(expand=c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x  = element_blank(), axis.ticks.x  = element_blank(), axis.title.x  = element_blank(),
axis.title.y  = element_blank(),
panel.border=element_blank())
syntenyPlot
### SAVING POINT:
pdf(file = "../figures/SyntenyPlot.pdf", width = 13, height = 15)
syntenyPlot
dev.off()
## and plot
syntenyPlot <- ggplot(geneDF) +
# chr
geom_segment(aes(x=chrLeft, xend = chrRight, y=chr, yend=chr), col = "grey", size = 1) +
# break in long chr
geom_segment(aes(x=breakstart+1000, xend=breakend, y=chr, yend=chr), col = "black", size = 7) +
# GENES:
# arrows for directions
geom_segment(data=geneDF[geneDF$direction %in% "forward",],
aes(x = geneLeft, y = chr, xend = geneRight, yend = chr, col = IRGgroup),
arrow = arrow(length = unit(0.4, "cm"))) +
geom_segment(data=geneDF[geneDF$direction %in% "reverse",],
aes(x = geneRight, y = chr, xend = geneLeft, yend = chr, col = IRGgroup),
arrow = arrow(length = unit(0.4, "cm"))) +
# blocks for position
geom_segment(aes(x=geneLeft, xend=geneRight, y=chr, yend=chr, col = IRGgroup), size = 3) +
# genes labels
geom_text(aes(x=geneLeft+(geneRight-geneLeft)/2, y=chr, label=shortName), size = 2) +
theme_bw() +
# add scale
geom_errorbarh(data=scaleDF,
aes(xmin=x,y=chr,xmax=xend), size = 1) +
geom_text(data=scaleDF, aes(y=chr2, label=label), x=305000) +
facet_wrap(sp~., scales = "free_y", nrow = 14) +
scale_color_manual(values = mycolors) +
scale_x_continuous(expand=c(0,0)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
panel.background = element_blank(), axis.line = element_blank(),
axis.text.x  = element_blank(), axis.ticks.x  = element_blank(), axis.title.x  = element_blank(),
axis.title.y  = element_blank(),
panel.border=element_blank())
syntenyPlot
### SAVING POINT:
pdf(file = "../figures/SyntenyPlot.pdf", width = 13, height = 15)
syntenyPlot
dev.off()
View(data_FINAL)
